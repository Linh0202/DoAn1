/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package Interface;

import Interface.PreSenter.GiaoDucPreSenter;
import Interface.PreSenter.GiaoDucView;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author Penguin
 */
public class Tim extends javax.swing.JFrame
implements GiaoDucView,ActionListener{

  private GiaoDucPreSenter gd;
  private String User;
  private int maquyen;
  private DefaultTableModel table;
  private String key_delete;
    public Tim(String U,int ma) {
        initComponents();
        gd=new GiaoDucPreSenter(this);
        
        
        table=(DefaultTableModel) tblsinhvien.getModel();
        if(ma==1){
            btnxoa.setEnabled(false);
        }
        User=U;
        maquyen=ma;
        gd.HanlerReadDataSV();
        btnthongke.addActionListener(this);
        btnback.addActionListener(this);
        btnxoa.addActionListener(this);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jInternalFrame1 = new javax.swing.JInternalFrame();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        timkiemma = new javax.swing.JComboBox<>();
        txtkey = new javax.swing.JTextField();
        jScrollPane1 = new javax.swing.JScrollPane();
        tblsinhvien = new javax.swing.JTable();
        btnxoa = new javax.swing.JButton();
        jButton4 = new javax.swing.JButton();
        btnback = new javax.swing.JButton();
        btnthongke = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jInternalFrame1.setClosable(true);
        jInternalFrame1.setIconifiable(true);
        jInternalFrame1.setMaximizable(true);
        jInternalFrame1.setResizable(true);
        jInternalFrame1.setTitle("Tìm kiếm");
        jInternalFrame1.setVisible(true);

        jLabel1.setText("Trường tìm kiếm:");

        jLabel2.setText("Từ khóa:");

        jLabel3.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jLabel3.setForeground(java.awt.Color.blue);
        jLabel3.setText("Tìm kiếm");

        timkiemma.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Mã Sinh Viên", "Tên Sinh Viên", " " }));

        tblsinhvien.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Tên sinh viên", "Ngày sinh", "Giới tính ", "Số điện thoại"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        tblsinhvien.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tblsinhvienMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(tblsinhvien);

        btnxoa.setText("Xóa");

        jButton4.setText("Hủy");

        btnback.setText("Back");

        btnthongke.setText("Thống Kê");

        javax.swing.GroupLayout jInternalFrame1Layout = new javax.swing.GroupLayout(jInternalFrame1.getContentPane());
        jInternalFrame1.getContentPane().setLayout(jInternalFrame1Layout);
        jInternalFrame1Layout.setHorizontalGroup(
            jInternalFrame1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jInternalFrame1Layout.createSequentialGroup()
                .addGap(37, 37, 37)
                .addGroup(jInternalFrame1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jInternalFrame1Layout.createSequentialGroup()
                        .addGroup(jInternalFrame1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jLabel3)
                            .addGroup(jInternalFrame1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addComponent(jLabel2)
                                .addComponent(jLabel1)))
                        .addGap(18, 18, 18)
                        .addGroup(jInternalFrame1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(timkiemma, 0, 207, Short.MAX_VALUE)
                            .addComponent(txtkey))
                        .addGap(18, 18, 18)
                        .addComponent(btnthongke))
                    .addGroup(jInternalFrame1Layout.createSequentialGroup()
                        .addGap(2, 2, 2)
                        .addGroup(jInternalFrame1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(jInternalFrame1Layout.createSequentialGroup()
                                .addComponent(btnxoa)
                                .addGap(89, 89, 89)
                                .addComponent(jButton4)
                                .addGap(75, 75, 75)
                                .addComponent(btnback)))))
                .addContainerGap(24, Short.MAX_VALUE))
        );
        jInternalFrame1Layout.setVerticalGroup(
            jInternalFrame1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jInternalFrame1Layout.createSequentialGroup()
                .addGap(30, 30, 30)
                .addComponent(jLabel3)
                .addGap(20, 20, 20)
                .addGroup(jInternalFrame1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jLabel1)
                    .addGroup(jInternalFrame1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(timkiemma, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(btnthongke)))
                .addGap(23, 23, 23)
                .addGroup(jInternalFrame1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(txtkey, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(26, 26, 26)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 58, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(47, 47, 47)
                .addGroup(jInternalFrame1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnxoa)
                    .addComponent(jButton4)
                    .addComponent(btnback))
                .addContainerGap(58, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jInternalFrame1)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jInternalFrame1)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void tblsinhvienMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tblsinhvienMouseClicked
       int row=tblsinhvien.getSelectedRow();
       key_delete=tblsinhvien.getValueAt(row, 0).toString();
    }//GEN-LAST:event_tblsinhvienMouseClicked

    /**
     * @param args the command line arguments
     */
   

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnback;
    private javax.swing.JButton btnthongke;
    private javax.swing.JButton btnxoa;
    private javax.swing.JButton jButton4;
    private javax.swing.JInternalFrame jInternalFrame1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable tblsinhvien;
    private javax.swing.JComboBox<String> timkiemma;
    private javax.swing.JTextField txtkey;
    // End of variables declaration//GEN-END:variables

    @Override
    public void OnSucess() {
        JOptionPane.showMessageDialog(rootPane, "Sucess","Thong Bao",1);
    }

    @Override
    public void OnError() {
        JOptionPane.showMessageDialog(rootPane, "Failed","Thong Bao",1);
    }

    @Override
    public void getDataTimKiem(String ten, String truongkhoa, String sdt) {
        throw new UnsupportedOperationException("Not supported yet."); //To change body of generated methods, choose Tools | Templates.
    }

    @Override
    public void getDataKhoa(int makhoa, String ten, String truongkhoa, String sdt) {
        throw new UnsupportedOperationException("Not supported yet."); //To change body of generated methods, choose Tools | Templates.
    }

    @Override
    public void getDataTimKiemLop(int makhoa, String tenlop) {
        throw new UnsupportedOperationException("Not supported yet."); //To change body of generated methods, choose Tools | Templates.
    }

    @Override
    public void getDataLop(int makhoa, int malop, String tenlop) {
        throw new UnsupportedOperationException("Not supported yet."); //To change body of generated methods, choose Tools | Templates.
    }

   

    @Override
    public void getDataTimKiemGV(int makhoa, String ten, String ngaysinh, String hocvi, int gioitinh, String diachi, String sdt, String email, String chuyennganh) {
        throw new UnsupportedOperationException("Not supported yet."); //To change body of generated methods, choose Tools | Templates.
    }

    @Override
    public void getDataTimKiemTienDo(String maBC, String madetai, String thoigianbaocao, String tiendothuchien, String nguoibaocao, String ghichu) {
        throw new UnsupportedOperationException("Not supported yet."); //To change body of generated methods, choose Tools | Templates.
    }

    @Override
    public void getDataTimKiemNghiemThu(String mant, String madetai, String tgnt, String tgbd, String tgkt, float kinhphi, String ketluan) {
        throw new UnsupportedOperationException("Not supported yet."); //To change body of generated methods, choose Tools | Templates.
    }

    @Override
    public void actionPerformed(ActionEvent e) {
        if(e.getSource()==btnthongke){
            table.setRowCount(0);
              gd=new GiaoDucPreSenter(this);
            int key = timkiemma.getSelectedIndex();
            String key_word=txtkey.getText().toString().trim();
           
            switch(key){
                case 0:gd.HanlerTimKiemSVMa(key_word);break;
                case 1:gd.HanlerTimKiemSV(key_word);break;
            }
           
        }else if(e.getSource()==btnback){
            new GDmain(User, maquyen).setVisible(true);
            this.dispose();
        }else if(e.getSource()==btnxoa){
            gd.HanlerDeleteSV(key_delete);
            gd.HanlerReadDataSV();
        }
    }

    @Override
    public void getDataTimKiemSinhVien(int malop, String ten, String ngaysinh, int gioitinh, String diachi, String sdt, String email) {    
         String[] g=new String[]{ten,ngaysinh,String.valueOf(gioitinh),sdt};
        table.addRow(g);
    }
}
